#!/.venv/bin/bash

origDir="$PWD"
testDir="../tracks-test"
resultsDir="results"
ts=`date +%s%6N` # timestamp in ms

# remove resultsDir from current directory, so the results can be moved over at the end of this script
if [ -d "$resultsDir" ]; then
    rm -rf $resultsDir/*
fi

if [ -d "$testDir" ]; then
    rm -rf $testDir/*
else
    mkdir -p $testDir
fi

cd $testDir

echo "cd $testDir"

git clone https://github.com/keziah55/tracks.git

# make venv in tracks-test, not tracks, because pytest was picking up
# conftest.py files from modules installed in the venv (e.g. numpy)
mkdir -p .venv
python3 -m venv .venv

cd tracks
echo "cd tracks"

../.venv/bin/python -m pip -V

pythonVersion=`python3 -c "import sys; v=sys.version_info; print(f'{v.major}.{v.minor}')"`
if [[ $pythonVersion == "3.11" ]]; then
    echo "PySide2 from PyPI not compatible with Python 3.11"
    declare -a qt_bindings=("pyqt5" "pyside6" "pyqt6")
else
    declare -a qt_bindings=("pyside2" "pyqt5" "pyside6" "pyqt6")
    echo "PySide2" >> requirements.txt
fi

../.venv/bin/python -m pip install -r requirements.txt --no-cache-dir --no-warn-script-location
../.venv/bin/python -m pip install pytest pytest-qt pytest-cov pytest-profiling --no-cache-dir --no-warn-script-location

mkdir "$resultsDir"

# test with pyside2, then pyqt5
for qt_api in "${qt_bindings[@]}"; do
    export QT_API=$qt_api
    export PYTEST_QT_API=$qt_api
    echo "QT_API: $QT_API"
    echo "PYTEST_QT_API: $PYTEST_QT_API"
    ../.venv/bin/python -m pytest -v --cov=tracks --cov-report xml:"./$resultsDir/$qt_api-coverage.xml" --profile-svg --junitxml="./$resultsDir/$qt_api-results.xml" | tee "./$resultsDir/$qt_api-output.log"
    mv prof "$resultsDir/$qt_api-prof"
done

testDataDir="tracks/test/test_data"
if [ -d $testDataDir ]; then
    echo "moving test_data to results:"
    echo $testDataDir
    echo $resultsDir
    mv "$testDataDir" "$resultsDir"
fi

join_array () {
  local IFS="$1"
  shift
  echo "$*"
}
qts=`join_array , "${qt_bindings[@]}"`

../.venv/bin/python reports/makeTestReport.py --out "$resultsDir/report.html" --ts $ts --qt $qts

mv "$resultsDir" "$origDir"
